<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 注解bean查找配置 -->
	<context:component-scan base-package="xyz.zeling" />
	<mvc:annotation-driven validator="validator" />
	
	<!-- 静态文件处理，location是webapp下的路径，mapping是访问映射路径 -->
	<mvc:resources location="/img/" mapping="/img/**" />

	<!-- 加载properties文件 -->
	<bean id="propertyConfigurer" class="xyz.zeling.ssmconfig.common.PropertyConfigurer">
		<!-- 使用多个PropertyPlaceholderConfigurer的bean时，需要指定不同的加载顺序 ,ignoreUnresolvablePlaceholders也要设置为true -->
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配多个properties文件 -->
			<array>
				<value>classpath:property/jdbc-mysql.properties</value>
			</array>
		</property>
	</bean>

	<!-- 国际化 ,Session -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<!-- 禁止在生产环境中使用它，开发可用 -->
		<property name="cacheSeconds" value="0" />
		<!-- 解决从properties文件到jsp界面乱码问题 -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- hibernate验证器和国际化整合 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 验证器包下都有默认的显示信息，这个是配置验证信息指定为哪一个还是使用默认的信息 -->
		<!-- <property name="providerClass" value="org.hibernate.validator.HibernateValidator" 
			/> -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 文件上传，注意bean名称唯一 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1048576" />
		<property name="uploadTempDir" value="/temp" />
		<property name="maxInMemorySize" value="524288" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 配置主题 -->
	<bean id="themeSource"
		class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="theme." />
	</bean>

	<bean id="themeResolver"
		class="org.springframework.web.servlet.theme.SessionThemeResolver">
		<property name="defaultThemeName" value="light" />
	</bean>

	<!-- 异常处理方式一，使用SimpleMappingExceptionResolver -->
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="defaultErrorView" value="/exception/handle/errorGlobal" /> 
		<property name="exceptionAttribute" value="e" /> <property name="exceptionMappings"> 
		<props> <prop key="xyz.zeling.exception.handle.modules.exception.handle.UserNotFoundException">/exception/handling/errorUser</prop> 
		</props> </property> </bean> -->

	<!-- 拦截器 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
			<property name="paramName" value="theme" />
		</bean>
	</mvc:interceptors>

</beans>
