<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 注解bean查找配置 -->
	<context:component-scan base-package="xyz.zeling" />
	<mvc:annotation-driven validator="validator" />

	<!-- jsp查找 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 国际化 ,Session -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<!-- 禁止在生产环境中使用它，开发可用 -->
		<property name="cacheSeconds" value="0" />
		<!-- 解决从properties文件到jsp界面乱码问题 -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- hibernate验证器和国际化整合 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 验证器包下都有默认的显示信息，这个是配置验证信息指定为哪一个还是使用默认的信息 -->
		<!-- <property name="providerClass" value="org.hibernate.validator.HibernateValidator" 
			/> -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 文件上传，注意bean名称唯一 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1048576" />
		<property name="uploadTempDir" value="/temp" />
		<property name="maxInMemorySize" value="524288" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 配置主题 -->
	<bean id="themeSource"
		class="org.springframework.ui.context.support.ResourceBundleThemeSource">
		<property name="basenamePrefix" value="theme." />
	</bean>

	<bean id="themeResolver"
		class="org.springframework.web.servlet.theme.SessionThemeResolver">
		<property name="defaultThemeName" value="light" />
	</bean>

	<!-- 异常处理方式一，使用SimpleMappingExceptionResolver -->
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="defaultErrorView" value="/exception/handle/errorGlobal" /> 
		<property name="exceptionAttribute" value="e" /> <property name="exceptionMappings"> 
		<props> <prop key="xyz.zeling.exception.handle.modules.exception.handle.UserNotFoundException">/exception/handling/errorUser</prop> 
		</props> </property> </bean> -->

	<!-- 加载properties文件 -->
	<!-- 与上面的配置等价，下面的更容易理解 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
			<array>
				<value>classpath:property/jdbc-mysql.properties</value>
			</array>
		</property>
	</bean>

	<!-- 配置mybatis -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.driverClassName}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 连接池最大使用链接数量 -->
		<property name="maxActive" value="20" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果是mysql数据库此配置设为false,oracle为true -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<property name="defaultAutoCommit" value="true" />
		<!-- 验证连接有效与否的SQL，不同的数据配置不同，mysql是select 1，oracle是select 1 from dual -->
		<property name="validationQuery" value="select 1 " />
		<property name="filters" value="stat" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径，*是个通配符，代表所有的文件，**表示迭代查找 -->
		<property name="mapperLocations" value="classpath:xyz.zeling/**/*.xml" />
	</bean>
	<!--mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="xyz.zeling" />
		<!-- 如果只有一个数据源的话可以不用指定，但是如果有多个数据源的话必须要指定 --> 
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
			<property name="paramName" value="theme" />
		</bean>
	</mvc:interceptors>

</beans>
